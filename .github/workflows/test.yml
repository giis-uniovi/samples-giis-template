name: test-all
on:
  push:
    branches-ignore:
      - 'dependabot/**' #avoid duplicates: only run the PR, not the commit
      - 'gh-pages' #github pages do not trigger all tests
    tags-ignore:
      - 'v*' #avoid rerun existing commit on release
  pull_request:
    branches:
      - 'main'
jobs:
  test-java:
    runs-on: ubuntu-latest
    #if: ${{ false }}  # disable for now
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'

      - name: Test and aggregate surefire report
        run: mvn test surefire-report:report -Daggregate=true -Dmaven.test.failure.ignore=true -U --no-transfer-progress

      - name: Additional aggregated junit report
        uses: javiertuya/junit-report-action@v1
        with:
          surefire-files: "**/target/surefire-reports/TEST-*.xml"
          report-dir: target/site

      - name: Generate report checks
        if: always()
        uses: mikepenz/action-junit-report@v3.7.7
        with:
          check_name: "test-result"
          report_paths: "**/surefire-reports/TEST-*.xml"
          fail_on_failure: 'true'

      - if: always()
        name: Publish test report files
        uses: actions/upload-artifact@v3
        with:
          name: "test-report-files"
          path: |
            target/site
            **/target/site/jacoco/jacoco.xml

  sonarqube:
    needs: [test-java]
    #if: ${{ false }}  # disable for now
    #This job fails when comming from a dependabot PR (can't read the sonarqube token for security reasons).
    #Links to discussions and workaround at: https://github.com/giis-uniovi/samples-giis-template/issues/4
    if: ${{ github.event.pull_request.head.repo.fork != true && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps: #Recommended Sonarcloud configuration
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11
          cache: 'maven'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      #Compile and restore reports
      - name: Generate classes
        run: mvn test-compile -U --no-transfer-progress
      - name: Restore test reports
        uses: actions/download-artifact@v3
        with:
          name: test-report-files
          path: .

      #Manual exeuction, maven plugin does not read sonar-project.properties nor .sonarcloud.properties
      - name: Download sonarscanner
        run: curl --insecure -o ./sonarscanner.zip -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip && unzip -q sonarscanner.zip
      - name: SonarQube Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: sonar-scanner-4.7.0.2747-linux/bin/sonar-scanner -Dsonar.host.url=https://sonarcloud.io -Dsonar.projectKey=my:samples-giis-template -Dsonar.organization=giis
      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with: #needs location because is not aware of working-directory
          scanMetadataReportFile: .scannerwork/report-task.txt 

  publish-java-snapshot:
    #if: ${{ false }}  # disable for now
    #avoid publishing PRs and dependabot branches
    if: ${{ github.event.pull_request.head.repo.fork != true && github.event_name != 'pull_request' && !contains('/head/refs/dependabot/', github.ref) }}
    runs-on: ubuntu-latest
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }} 
    steps:
      - name: Checkout GitHub repo
        uses: actions/checkout@v3
      - name: Select Java Version
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'

      - name: Rename version to <version number>-<branch name>-SNAPSHOT
        run: |
          oldversion=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Renaming old version: ${oldversion}"
          version=${oldversion//-SNAPSHOT/}
          version=${version}-${BRANCH_NAME}-SNAPSHOT
          echo "to new Version: $version"
          mvn versions:set -DnewVersion=$version --no-transfer-progress

      # manage package versions shows the date in which branch was created, not executed
      # if no changing version number, this will keep latest 2 branches BY BRANCH CREATION
      # because of this, deletion must be done BEFORE deploy (if not, a version of old branch can be deleted after being updated)
      # NOTE at least one package must exist, if not the build fails (comment for the first build)
      - name: Cleanup old packages
        #if: ${{ false }}  # disable for now
        uses: actions/delete-package-versions@v4
        with: 
          package-name: 'giis.samples-giis-template'
          package-type: 'maven'
          min-versions-to-keep: 2
          delete-only-pre-release-versions: "true"
      - uses: actions/delete-package-versions@v4
        with: 
          package-name: 'giis.samples-giis-template-bom'
          package-type: 'maven'
          min-versions-to-keep: 2
          delete-only-pre-release-versions: "true"
      - uses: actions/delete-package-versions@v4
        with: 
          package-name: 'giis.samples-giis-template-m1'
          package-type: 'maven'
          min-versions-to-keep: 2
          delete-only-pre-release-versions: "true"
      - uses: actions/delete-package-versions@v4
        with: 
          package-name: 'giis.samples-giis-template-m2'
          package-type: 'maven'
          min-versions-to-keep: 2
          delete-only-pre-release-versions: "true"

      # note that deploy uses the profile that specifies the github repository server
      - name: Deploy to GitHub packages
        run: mvn deploy -P publish-github -DskipTests=true -Dmaven.test.failure.ignore=true -U --no-transfer-progress
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}